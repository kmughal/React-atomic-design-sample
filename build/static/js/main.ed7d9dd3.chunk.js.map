{"version":3,"sources":["components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/HelloWorld/HelloWorld.js","components/HelloWorld/index.js","components/Label/Label.js","components/Label/index.js","../config/componentData.js","docs/examples/HelloWorld/HelloWorldDateTime.js","docs/examples/HelloWorld/HelloWorldExample.js","docs/examples/Label/LabelRequiredExample.js","docs/examples/Label/NotRequireLabel.js","docs/examples/ProgressBar/ProgressBar100percentExample.js","docs/examples/ProgressBar/ProgressBar30percentExample.js","docs/examples/ProgressBar/ProgressBar60percentExample.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","index.js"],"names":["ProgressBar","getColor","percentage","getWidthAsPercentInTotalWidth","parseInt","_this","props","width","percent","_this$props","this","height","react_default","a","createElement","style","border","background","React","Component","defaultProps","__webpack_require__","d","__webpack_exports__","components_ProgressBar_ProgressBar","inlineStyle","padding","HelloWorld","_ref","message","components_HelloWorld_HelloWorld","Label","text","isRequired","htmlFor","components_Label_Label","module","exports","name","description","code","examples","type","required","defaultValue","value","computed","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ps_react_HelloWorld__WEBPACK_IMPORTED_MODULE_1__","HelloWorldExample","Date","toString","ps_react_Label__WEBPACK_IMPORTED_MODULE_1__","RequiredLabelExample","NotRequiredLabelExample","ps_react_ProgressBar__WEBPACK_IMPORTED_MODULE_1__","ProgressBarExample","map","./HelloWorld/HelloWorldDateTime","./HelloWorld/HelloWorldDateTime.js","./HelloWorld/HelloWorldExample","./HelloWorld/HelloWorldExample.js","./Label/LabelRequiredExample","./Label/LabelRequiredExample.js","./Label/NotRequireLabel","./Label/NotRequireLabel.js","./ProgressBar/ProgressBar100percentExample","./ProgressBar/ProgressBar100percentExample.js","./ProgressBar/ProgressBar30percentExample","./ProgressBar/ProgressBar30percentExample.js","./ProgressBar/ProgressBar60percentExample","./ProgressBar/ProgressBar60percentExample.js","webpackContext","req","id","webpackContextResolve","o","e","Error","keys","Object","resolve","Navigation","components","className","key","href","concat","propTypse","PropTypes","array","CodeExample","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","Example","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleClass","event","preventDefault","setState","prevState","showCode","state","_this$props$example","example","ExampleComponent","require","componentName","default","onClick","docs_CodeExample","Props","propsTypes","object","ComponentPage","component","length","docs_Example","docs_Props","Docs","route","window","location","hash","substr","_this2","addEventListener","componentData","filter","Fragment","textAlign","docs_Navigation","docs_ComponentPage","render","Docs_Docs","document","getElementById"],"mappings":"mJAIMA,6MACLC,SAAW,SAAAC,GACV,OAAmB,MAAfA,EAA2B,YACxBA,EAAa,GAAK,aAAe,SAGzCC,8BAAgC,kBAC/BC,SAASC,EAAKC,MAAMC,OAASF,EAAKC,MAAME,QAAU,KAAM,6EAEhD,IAAAC,EAC2BC,KAAKJ,MAAhCE,EADAC,EACAD,QAASD,EADTE,EACSF,MAAOI,EADhBF,EACgBE,OACxB,OACCC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAQ,iBAAkBT,MAAOA,IAC9CK,EAAAC,EAAAC,cAAA,OACCC,MAAO,CACNR,MAAOG,KAAKP,gCACZQ,SACAM,WAAYP,KAAKT,SAASO,cAjBNU,IAAMC,WAkChCnB,EAAYoB,aAAe,CAC1Bb,MAAO,IACPI,OAAQ,GACRH,QAAS,IAGKR,QC5CfqB,EAAAC,EAAAC,EAAA,sBAAAC,uDCIMC,EAAc,CACnBR,WAAY,UAEZD,OAAQ,iBACRU,QAAS,cAGJC,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAClBjB,EAAAC,EAAAC,cAAA,KAAGC,MAAOU,GAAcI,IAUzBF,EAAWP,aAAe,CACzBS,QAAS,eAGKF,QC1BfN,EAAAC,EAAAC,EAAA,sBAAAO,sDCGMC,EAAQ,SAAAH,GAAmC,IAAhCI,EAAgCJ,EAAhCI,KAAMC,EAA0BL,EAA1BK,WAAYC,EAAcN,EAAdM,QAClC,OACCtB,EAAAC,EAAAC,cAAA,SAAOoB,QAASA,GACdF,EADF,IACSC,GAAc,MAKzBF,EAAMX,aAAe,CACpBa,YAAY,EACZC,QAAS,QACTF,KAAM,gBAYQD,QC1BfV,EAAAC,EAAAC,EAAA,sBAAAY,mBCAAC,EAAAC,QAAA,EACAC,KAAA,aACAC,YAAA,GACAC,KAAA,4gBACAC,SAAA,EACAH,KAAA,qBACAE,KAAA,6MACAD,YAAA,IACG,CACHD,KAAA,oBACAE,KAAA,kNACAD,YAAA,KAEAjC,MAAA,CACAuB,QAAA,CACAa,KAAA,CACAJ,KAAA,UAEAK,UAAA,EACAJ,YAAA,qBACAK,aAAA,CACAC,MAAA,gBACAC,UAAA,MAIC,CACDR,KAAA,QACAC,YAAA,GACAC,KAAA,0oBACAC,SAAA,EACAH,KAAA,uBACAE,KAAA,8QACAD,YAAA,iDACG,CACHD,KAAA,kBACAE,KAAA,qXACAD,YAAA,sIAEAjC,MAAA,CACA0B,KAAA,CACAU,KAAA,CACAJ,KAAA,UAEAK,UAAA,EACAJ,YAAA,aACAK,aAAA,CACAC,MAAA,iBACAC,UAAA,IAGAb,WAAA,CACAS,KAAA,CACAJ,KAAA,QAEAK,UAAA,EACAJ,YAAA,+DACAK,aAAA,CACAC,MAAA,QACAC,UAAA,IAGAZ,QAAA,CACAQ,KAAA,CACAJ,KAAA,UAEAK,UAAA,EACAJ,YAAA,0DACAK,aAAA,CACAC,MAAA,UACAC,UAAA,MAIC,CACDR,KAAA,cACAC,YAAA,0BACAC,KAAA,8mCACAC,SAAA,EACAH,KAAA,+BACAE,KAAA,6PACAD,YAAA,4CACG,CACHD,KAAA,8BACAE,KAAA,2PACAD,YAAA,2CACG,CACHD,KAAA,8BACAE,KAAA,2PACAD,YAAA,4CAEAjC,MAAA,CACAC,MAAA,CACAmC,KAAA,CACAJ,KAAA,UAEAK,UAAA,EACAJ,YAAA,6BACAK,aAAA,CACAC,MAAA,MACAC,UAAA,IAGAnC,OAAA,CACA+B,KAAA,CACAJ,KAAA,UAEAK,UAAA,EACAJ,YAAA,8BACAK,aAAA,CACAC,MAAA,KACAC,UAAA,IAGAtC,QAAA,CACAkC,KAAA,CACAJ,KAAA,UAEAK,UAAA,EACAJ,YAAA,+BACAK,aAAA,CACAC,MAAA,KACAC,UAAA,uCC1HAzB,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAG,EAAA9B,EAAA,GAKe+B,UAFW,kBAAMH,EAAApC,EAAAC,cAACqC,EAAA,EAAD,CAAYtB,SAAS,IAAIwB,MAAOC,4CCHhEjC,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAG,EAAA9B,EAAA,GAKe+B,UAFW,kBAAMH,EAAApC,EAAAC,cAACqC,EAAA,EAAD,CAAYtB,QAAS,4DCHrDR,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAO,EAAAlC,EAAA,GAQemC,UAJc,kBAC5BP,EAAApC,EAAAC,cAACyC,EAAA,EAAD,CAAOtB,YAAY,EAAMC,QAAQ,OAAOF,KAAK,8CCL9CX,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAO,EAAAlC,EAAA,GAQeoC,UAJiB,kBAC/BR,EAAApC,EAAAC,cAACyC,EAAA,EAAD,CAAOtB,YAAY,EAAOC,QAAQ,OAAOF,KAAK,0DCL/CX,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAU,EAAArC,EAAA,GAMesC,UAFY,kBAAMV,EAAApC,EAAAC,cAAC4C,EAAA,EAAD,CAAalD,QAAS,IAAKD,MAAO,IAAKI,OAAQ,oCCJhFU,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAU,EAAArC,EAAA,GAMesC,UAFY,kBAAMV,EAAApC,EAAAC,cAAC4C,EAAA,EAAD,CAAalD,QAAS,GAAID,MAAO,IAAKI,OAAQ,oCCJ/EU,EAAA0B,EAAAxB,GAAA,IAAAyB,EAAA3B,EAAA,GAAA4B,EAAA5B,EAAA6B,EAAAF,GAAAU,EAAArC,EAAA,GAMesC,UAFY,kBAAMV,EAAApC,EAAAC,cAAC4C,EAAA,EAAD,CAAalD,QAAS,GAAID,MAAO,IAAKI,OAAQ,kECJ/E,IAAAiD,EAAA,CACAC,kCAAA,GACAC,qCAAA,GACAC,iCAAA,GACAC,oCAAA,GACAC,+BAAA,GACAC,kCAAA,GACAC,0BAAA,GACAC,6BAAA,GACAC,6CAAA,GACAC,gDAAA,GACAC,4CAAA,GACAC,+CAAA,GACAC,4CAAA,GACAC,+CAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAvD,EAAAwD,GAEA,SAAAC,EAAAF,GACA,IAAAvD,EAAA0D,EAAAnB,EAAAgB,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAxC,KAAA,mBACAwC,EAEA,OAAApB,EAAAgB,GAEAD,EAAAO,KAAA,WACA,OAAAC,OAAAD,KAAAtB,IAEAe,EAAAS,QAAAN,EACA1C,EAAAC,QAAAsC,EACAA,EAAAE,GAAA,iJChCMQ,EAAa,SAAAzD,GAAoB,IAAjB0D,EAAiB1D,EAAjB0D,WACrB,OACC1E,EAAAC,EAAAC,cAAA,OAAKyE,UAAU,cACbD,EAAW1B,IAAI,SAAAtB,GAAI,OACnB1B,EAAAC,EAAAC,cAAA,OAAKyE,UAAU,kBAAkBC,IAAKlD,GACrC1B,EAAAC,EAAAC,cAAA,KAAG2E,KAAI,IAAAC,OAAMpD,IAASA,QAO3B+C,EAAWM,UAAY,CACtBL,WAAYM,IAAUC,MAAM5D,YAGdoD,0CCMAS,8LAjBbC,IAAKC,iBAAiB,aAAcC,KACpCF,IAAKG,eAAexF,KAAKyF,0CAGjB,IAAA9F,EAAAK,KACR,OACCE,EAAAC,EAAAC,cAAA,OAAKsF,IAAK,SAAAA,GAAQ/F,EAAK8F,QAAUC,IAChCxF,EAAAC,EAAAC,cAAA,YAAOJ,KAAKJ,MAAM+F,kBAVInF,IAAMC,WCsCjBmF,cAtCd,SAAAA,EAAYhG,GAAO,IAAAD,EAAA,OAAA8E,OAAAoB,EAAA,EAAApB,CAAAzE,KAAA4F,IAClBjG,EAAA8E,OAAAqB,EAAA,EAAArB,CAAAzE,KAAAyE,OAAAsB,EAAA,EAAAtB,CAAAmB,GAAAI,KAAAhG,KAAMJ,KAIPqG,YAAc,SAAAC,GACbA,EAAMC,iBACNxG,EAAKyG,SAAS,SAAAC,GAAS,MAAK,CAAEC,UAAWD,EAAUC,aALnD3G,EAAK4G,MAAQ,CAAED,UAAU,GAFP3G,wEAUV,IACA2G,EAAatG,KAAKuG,MAAlBD,SADAE,EAE4BxG,KAAKJ,MAAM6G,QAAvC3E,EAFA0E,EAEA1E,KAAMD,EAFN2E,EAEM3E,YAAaD,EAFnB4E,EAEmB5E,KAErB8E,EAAmBC,MAAQ,KAAA3B,OAChChF,KAAKJ,MAAMgH,cADoB,KAAA5B,OAE5BpD,IAAQiF,QAEZ,OACC3G,EAAAC,EAAAC,cAAA,WACEyB,GAAe3B,EAAAC,EAAAC,cAAA,UAAKyB,GACrB3B,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,SACCF,EAAAC,EAAAC,cAAA,KAAG2E,KAAK,IAAI+B,QAAS9G,KAAKiG,aACxBK,EAAW,OAAS,SAEpBA,GAAYpG,EAAAC,EAAAC,cAAC2G,EAAD,KAAcjF,YA3BXtB,IAAMC,WCDtBuG,EAAO,SAAA9F,GAAc,IAAXtB,EAAWsB,EAAXtB,MAEf,OACCM,EAAAC,EAAAC,cAAA,SAAOE,OAAO,IAAIuE,UAAU,SAC3B3E,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,wBAIFF,EAAAC,EAAAC,cAAA,aACEqE,OAAOD,KAAK5E,GAAOsD,IAAI,SAAA4B,GAClB,OAAS5E,EAAAC,EAAAC,cAAA,MAAI0E,IAAKA,GAChB5E,EAAAC,EAAAC,cAAA,UAAK0E,GACL5E,EAAAC,EAAAC,cAAA,UAAKR,EAAMkF,GAAKjD,aAChB3B,EAAAC,EAAAC,cAAA,UAAKR,EAAMkF,GAAK5C,cAAgBtC,EAAMkF,GAAK5C,aAAaC,OACxDjC,EAAAC,EAAAC,cAAA,UAAKR,EAAMkF,GAAK7C,UAAY,WAQxC+E,EAAMC,WAAa,CACjBrH,MAAQsF,IAAUgC,OAAO3F,YAGZyF,QCHAG,EA1BO,SAAAjG,GAAmB,IAAhBkG,EAAgBlG,EAAhBkG,UAChBxF,EAAuCwF,EAAvCxF,KAAMC,EAAiCuF,EAAjCvF,YAAajC,EAAoBwH,EAApBxH,MAAOmC,EAAaqF,EAAbrF,SAClC,OACC7B,EAAAC,EAAAC,cAAA,OAAKyE,UAAU,iBACd3E,EAAAC,EAAAC,cAAA,UAAKwB,GACL1B,EAAAC,EAAAC,cAAA,SAAIyB,GACJ3B,EAAAC,EAAAC,cAAA,oBAAgC,IAApB2B,EAASsF,OAAe,GAAK,KACxCtF,EAASsF,OAAS,EAChBtF,EAASmB,IAAI,SAAAuD,GAAO,OACpBvG,EAAAC,EAAAC,cAACkH,EAAD,CACCxC,IAAK2B,EAAQ3E,KACb2E,QAASA,EACTG,cAAehF,MAGhB,aACH1B,EAAAC,EAAAC,cAAA,mBACCR,EAAQM,EAAAC,EAAAC,cAACmH,EAAD,CAAO3H,MAAOA,IAAY,wDCjBjB4H,qBACpB,SAAAA,EAAY5H,GAAO,IAAAD,EAAA,OAAA8E,OAAAoB,EAAA,EAAApB,CAAAzE,KAAAwH,IAClB7H,EAAA8E,OAAAqB,EAAA,EAAArB,CAAAzE,KAAAyE,OAAAsB,EAAA,EAAAtB,CAAA+C,GAAAxB,KAAAhG,KAAMJ,KACD2G,MAAQ,CACZkB,MAAOC,OAAOC,SAASC,KAAKC,OAAO,IAHlBlI,mFAOC,IAAAmI,EAAA9H,KACnB0H,OAAOK,iBAAiB,aAAc,WACrCD,EAAK1B,SAAS,CAAEqB,MAAOC,OAAOC,SAASC,KAAKC,OAAO,wCAI5C,IACAJ,EAAUzH,KAAKuG,MAAfkB,MACFL,EAAYK,EACfO,IAAcC,OAAO,SAAAb,GAAS,OAAIA,EAAUxF,OAAS6F,IAAO,GAC5DO,IAAc,GACjB,OACC9H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+H,SAAA,KACChI,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAC8H,UAAW,WAAvB,iCACAjI,EAAAC,EAAAC,cAAA,OAAKyE,UAAU,kBACd3E,EAAAC,EAAAC,cAACgI,EAAD,CACCxD,WAAYoD,IAAc9E,IAAI,SAAAkE,GAAS,OAAIA,EAAUxF,SAEtD1B,EAAAC,EAAAC,cAACiI,EAAD,CAAejB,UAAWA,aA1BG5G,IAAMC,YCAxC6H,iBAAOpI,EAAAC,EAAAC,cAACmI,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.ed7d9dd3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Progress bar component! */\nclass ProgressBar extends React.Component {\n\tgetColor = percentage => {\n\t\tif (percentage === 100) return \"darkgreen\";\n\t\treturn percentage > 50 ? \"lightgreen\" : \"red\";\n\t};\n\n\tgetWidthAsPercentInTotalWidth = () =>\n\t\tparseInt(this.props.width * (this.props.percent / 100), 10);\n\n\trender() {\n\t\tconst { percent, width, height } = this.props;\n\t\treturn (\n\t\t\t<div style={{ border: \"1px solid gray\", width: width }}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: this.getWidthAsPercentInTotalWidth(),\n\t\t\t\t\t\theight,\n\t\t\t\t\t\tbackground: this.getColor(percent)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProgressBar.propTypes = {\n\t/** Width of the progress bard */\n\twidth: PropTypes.number.isRequired,\n\t/** Height of the progress bard */\n\theight: PropTypes.number.isRequired,\n\t/** Percent of the progress bard */\n\tpercent: PropTypes.number.isRequired\n};\n\nProgressBar.defaultProps = {\n\twidth: 300,\n\theight: 50,\n\tpercent: 66\n};\n\nexport default ProgressBar;\n","export { default } from \"./ProgressBar\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Simple Hello world component */\nconst inlineStyle = {\n\tbackground: \"#dfd7d9\",\n\t/* border: 4px dashed blue; */\n\tborder: \"1px solid #ccc\",\n\tpadding: \" 50px 50px\"\n};\n\nconst HelloWorld = ({ message }) => (\n\t<p style={inlineStyle}>{message}</p>\n);\n\nHelloWorld.propTypes = {\n\t/** \n    Message to display\n   */\n\tmessage: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n\tmessage: \"hello world\"\n};\n\nexport default HelloWorld;\n","export { default } from \"./HelloWorld\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Label = ({ text, isRequired, htmlFor }) => {\n\treturn (\n\t\t<label htmlFor={htmlFor}>\n\t\t\t{text} {isRequired && \"*\"}\n\t\t</label>\n\t);\n};\n\nLabel.defaultProps = {\n\tisRequired: false,\n\thtmlFor: \"empty\",\n\ttext: \"empty string\"\n};\n\nLabel.propTypes = {\n\t/** Text label */\n\ttext: PropTypes.string.isRequired,\n\t/** Boolean flag indicating that if the value is required or not */\n\tisRequired: PropTypes.bool.isRequired,\n\t/** Name of Id of the control which this label is tied with */\n\thtmlFor: PropTypes.string.isRequired\n};\n\nexport default Label;\n","export { default } from \"./Label\";\n","module.exports = [{\n  \"name\": \"HelloWorld\",\n  \"description\": \"\",\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\n/** Simple Hello world component */\\nconst inlineStyle = {\\n\\tbackground: \\\"#dfd7d9\\\",\\n\\t/* border: 4px dashed blue; */\\n\\tborder: \\\"1px solid #ccc\\\",\\n\\tpadding: \\\" 50px 50px\\\"\\n};\\n\\nconst HelloWorld = ({ message }) => (\\n\\t<p style={inlineStyle}>{message}</p>\\n);\\n\\nHelloWorld.propTypes = {\\n\\t/** \\n    Message to display\\n   */\\n\\tmessage: PropTypes.string\\n};\\n\\nHelloWorld.defaultProps = {\\n\\tmessage: \\\"hello world\\\"\\n};\\n\\nexport default HelloWorld;\\n\",\n  \"examples\": [{\n    \"name\": \"HelloWorldDateTime\",\n    \"code\": \"import React from \\\"react\\\"\\nimport HelloWorld from \\\"ps-react/HelloWorld\\\"\\n\\nconst HelloWorldExample = () => <HelloWorld message={new Date().toString()}></HelloWorld>\\n\\nexport default HelloWorldExample\\n\",\n    \"description\": \"\"\n  }, {\n    \"name\": \"HelloWorldExample\",\n    \"code\": \"import React from \\\"react\\\"\\nimport HelloWorld from \\\"ps-react/HelloWorld\\\"\\n\\nconst HelloWorldExample = () => <HelloWorld message={\\\"Hello world from khurram\\\"}></HelloWorld>\\n\\nexport default HelloWorldExample\\n\",\n    \"description\": \"\"\n  }],\n  \"props\": {\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Message to display\",\n      \"defaultValue\": {\n        \"value\": \"\\\"hello world\\\"\",\n        \"computed\": false\n      }\n    }\n  }\n}, {\n  \"name\": \"Label\",\n  \"description\": \"\",\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\nconst Label = ({ text, isRequired, htmlFor }) => {\\n\\treturn (\\n\\t\\t<label htmlFor={htmlFor}>\\n\\t\\t\\t{text} {isRequired && \\\"*\\\"}\\n\\t\\t</label>\\n\\t);\\n};\\n\\nLabel.defaultProps = {\\n\\tisRequired: false,\\n\\thtmlFor: \\\"empty\\\",\\n\\ttext: \\\"empty string\\\"\\n};\\n\\nLabel.propTypes = {\\n\\t/** Text label */\\n\\ttext: PropTypes.string.isRequired,\\n\\t/** Boolean flag indicating that if the value is required or not */\\n\\tisRequired: PropTypes.bool.isRequired,\\n\\t/** Name of Id of the control which this label is tied with */\\n\\thtmlFor: PropTypes.string.isRequired\\n};\\n\\nexport default Label;\\n\",\n  \"examples\": [{\n    \"name\": \"LabelRequiredExample\",\n    \"code\": \"import React from \\\"react\\\";\\nimport Label from \\\"ps-react/Label\\\";\\n\\n/** Label when the value of input box is required */\\nconst RequiredLabelExample = () => (\\n\\t<Label isRequired={true} htmlFor=\\\"text\\\" text=\\\"First name\\\" />\\n);\\n\\nexport default RequiredLabelExample;\\n\",\n    \"description\": \"Label when the value of input box is required\"\n  }, {\n    \"name\": \"NotRequireLabel\",\n    \"code\": \"import React from \\\"react\\\";\\nimport Label from \\\"ps-react/Label\\\";\\n\\n/** When the text box value is not required then extra * is not added as part of the label text to indicate user that is not required */\\nconst NotRequiredLabelExample = () => (\\n\\t<Label isRequired={false} htmlFor=\\\"text\\\" text=\\\"Additional information\\\" />\\n);\\n\\nexport default NotRequiredLabelExample;\\n\",\n    \"description\": \"When the text box value is not required then extra * is not added as part of the label text to indicate user that is not required\"\n  }],\n  \"props\": {\n    \"text\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Text label\",\n      \"defaultValue\": {\n        \"value\": \"\\\"empty string\\\"\",\n        \"computed\": false\n      }\n    },\n    \"isRequired\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Boolean flag indicating that if the value is required or not\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"htmlFor\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Name of Id of the control which this label is tied with\",\n      \"defaultValue\": {\n        \"value\": \"\\\"empty\\\"\",\n        \"computed\": false\n      }\n    }\n  }\n}, {\n  \"name\": \"ProgressBar\",\n  \"description\": \"Progress bar component!\",\n  \"code\": \"import React from \\\"react\\\";\\nimport PropTypes from \\\"prop-types\\\";\\n\\n/** Progress bar component! */\\nclass ProgressBar extends React.Component {\\n\\tgetColor = percentage => {\\n\\t\\tif (percentage === 100) return \\\"darkgreen\\\";\\n\\t\\treturn percentage > 50 ? \\\"lightgreen\\\" : \\\"red\\\";\\n\\t};\\n\\n\\tgetWidthAsPercentInTotalWidth = () =>\\n\\t\\tparseInt(this.props.width * (this.props.percent / 100), 10);\\n\\n\\trender() {\\n\\t\\tconst { percent, width, height } = this.props;\\n\\t\\treturn (\\n\\t\\t\\t<div style={{ border: \\\"1px solid gray\\\", width: width }}>\\n\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\tstyle={{\\n\\t\\t\\t\\t\\t\\twidth: this.getWidthAsPercentInTotalWidth(),\\n\\t\\t\\t\\t\\t\\theight,\\n\\t\\t\\t\\t\\t\\tbackground: this.getColor(percent)\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</div>\\n\\t\\t);\\n\\t}\\n}\\n\\nProgressBar.propTypes = {\\n\\t/** Width of the progress bard */\\n\\twidth: PropTypes.number.isRequired,\\n\\t/** Height of the progress bard */\\n\\theight: PropTypes.number.isRequired,\\n\\t/** Percent of the progress bard */\\n\\tpercent: PropTypes.number.isRequired\\n};\\n\\nProgressBar.defaultProps = {\\n\\twidth: 300,\\n\\theight: 50,\\n\\tpercent: 66\\n};\\n\\nexport default ProgressBar;\\n\",\n  \"examples\": [{\n    \"name\": \"ProgressBar100percentExample\",\n    \"code\": \"import React from \\\"react\\\"\\nimport ProgressBar from \\\"ps-react/ProgressBar\\\"\\n\\n/** Progress bar with 100 percent completion */\\nconst ProgressBarExample = () => <ProgressBar percent={100} width={300} height={20}/>\\n\\nexport default ProgressBarExample\\n\",\n    \"description\": \"Progress bar with 100 percent completion\"\n  }, {\n    \"name\": \"ProgressBar30percentExample\",\n    \"code\": \"import React from \\\"react\\\"\\nimport ProgressBar from \\\"ps-react/ProgressBar\\\"\\n\\n/** Progress bar with 30 percent completion */\\nconst ProgressBarExample = () => <ProgressBar percent={30} width={300} height={20}/>\\n\\nexport default ProgressBarExample\\n\",\n    \"description\": \"Progress bar with 30 percent completion\"\n  }, {\n    \"name\": \"ProgressBar60percentExample\",\n    \"code\": \"import React from \\\"react\\\"\\nimport ProgressBar from \\\"ps-react/ProgressBar\\\"\\n\\n/** Progress bar with 60 percent completion */\\nconst ProgressBarExample = () => <ProgressBar percent={66} width={300} height={20}/>\\n\\nexport default ProgressBarExample\\n\",\n    \"description\": \"Progress bar with 60 percent completion\"\n  }],\n  \"props\": {\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Width of the progress bard\",\n      \"defaultValue\": {\n        \"value\": \"300\",\n        \"computed\": false\n      }\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Height of the progress bard\",\n      \"defaultValue\": {\n        \"value\": \"50\",\n        \"computed\": false\n      }\n    },\n    \"percent\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Percent of the progress bard\",\n      \"defaultValue\": {\n        \"value\": \"66\",\n        \"computed\": false\n      }\n    }\n  }\n}];","import React from \"react\"\nimport HelloWorld from \"ps-react/HelloWorld\"\n\nconst HelloWorldExample = () => <HelloWorld message={new Date().toString()}></HelloWorld>\n\nexport default HelloWorldExample\n","import React from \"react\"\nimport HelloWorld from \"ps-react/HelloWorld\"\n\nconst HelloWorldExample = () => <HelloWorld message={\"Hello world from khurram\"}></HelloWorld>\n\nexport default HelloWorldExample\n","import React from \"react\";\nimport Label from \"ps-react/Label\";\n\n/** Label when the value of input box is required */\nconst RequiredLabelExample = () => (\n\t<Label isRequired={true} htmlFor=\"text\" text=\"First name\" />\n);\n\nexport default RequiredLabelExample;\n","import React from \"react\";\nimport Label from \"ps-react/Label\";\n\n/** When the text box value is not required then extra * is not added as part of the label text to indicate user that is not required */\nconst NotRequiredLabelExample = () => (\n\t<Label isRequired={false} htmlFor=\"text\" text=\"Additional information\" />\n);\n\nexport default NotRequiredLabelExample;\n","import React from \"react\"\nimport ProgressBar from \"ps-react/ProgressBar\"\n\n/** Progress bar with 100 percent completion */\nconst ProgressBarExample = () => <ProgressBar percent={100} width={300} height={20}/>\n\nexport default ProgressBarExample\n","import React from \"react\"\nimport ProgressBar from \"ps-react/ProgressBar\"\n\n/** Progress bar with 30 percent completion */\nconst ProgressBarExample = () => <ProgressBar percent={30} width={300} height={20}/>\n\nexport default ProgressBarExample\n","import React from \"react\"\nimport ProgressBar from \"ps-react/ProgressBar\"\n\n/** Progress bar with 60 percent completion */\nconst ProgressBarExample = () => <ProgressBar percent={66} width={300} height={20}/>\n\nexport default ProgressBarExample\n","var map = {\n\t\"./HelloWorld/HelloWorldDateTime\": 13,\n\t\"./HelloWorld/HelloWorldDateTime.js\": 13,\n\t\"./HelloWorld/HelloWorldExample\": 14,\n\t\"./HelloWorld/HelloWorldExample.js\": 14,\n\t\"./Label/LabelRequiredExample\": 15,\n\t\"./Label/LabelRequiredExample.js\": 15,\n\t\"./Label/NotRequireLabel\": 16,\n\t\"./Label/NotRequireLabel.js\": 16,\n\t\"./ProgressBar/ProgressBar100percentExample\": 17,\n\t\"./ProgressBar/ProgressBar100percentExample.js\": 17,\n\t\"./ProgressBar/ProgressBar30percentExample\": 18,\n\t\"./ProgressBar/ProgressBar30percentExample.js\": 18,\n\t\"./ProgressBar/ProgressBar60percentExample\": 19,\n\t\"./ProgressBar/ProgressBar60percentExample.js\": 19\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 31;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Navigation = ({ components }) => {\n\treturn (\n\t\t<div className=\"navigation\">\n\t\t\t{components.map(name => (\n\t\t\t\t<div className=\"navigation-item\" key={name}>\n\t\t\t\t\t<a href={`#${name}`}>{name}</a>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nNavigation.propTypse = {\n\tcomponents: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hljs from \"highlight.js/lib/highlight\";\nimport javascript from \"highlight.js/lib/languages/javascript\";\n\nclass CodeExample extends React.Component {\n  \n\tcomponentDidMount() {\n\t\thljs.registerLanguage(\"javascript\", javascript);\n\t\thljs.highlightBlock(this.element);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<pre ref={ref => {this.element = ref}}>\n\t\t\t\t<code>{this.props.children}</code>\n\t\t\t</pre>\n\t\t);\n\t}\n}\n\nCodeExample.propTypes = {\n\tchildren: PropTypes.string.isRequired\n};\n\nexport default CodeExample;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CodeExample from \"./CodeExample\";\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { showCode: true };\n\t}\n\n\ttoggleClass = event => {\n\t\tevent.preventDefault();\n\t\tthis.setState(prevState => ({ showCode: !prevState.showCode }));\n\t};\n\n\trender() {\n\t\tconst { showCode } = this.state;\n\t\tconst { code, description, name } = this.props.example;\n\n\t\tconst ExampleComponent = require(`./examples/${\n\t\t\tthis.props.componentName\n\t\t}/${name}`).default;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{description && <h4>{description}</h4>}\n\t\t\t\t<ExampleComponent />\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"#\" onClick={this.toggleClass}>\n\t\t\t\t\t\t{showCode ? \"Show\" : \"Hide\"}\n\t\t\t\t\t</a>\n\t\t\t\t {!showCode && <CodeExample>{code}</CodeExample>}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nExample.propTypes = {\n\texample: PropTypes.object.isRequired,\n\tcomponentName: PropTypes.string.isRequired\n};\n\nexport default Example;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Props =( {props}) => {\n\n\treturn (\n\t\t<table border=\"2\" className=\"props\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t<th>Default</th>\n\t\t\t\t\t<th>Required</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t{Object.keys(props).map(key => {\n          return ( <tr key={key}>\n            <td>{key}</td>\n            <td>{props[key].description}</td>\n            <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n            <td>{props[key].required || \"x\"}</td>\n          </tr>)\n        })}\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nProps.propsTypes = {\n  props : PropTypes.object.isRequired\n}\n\nexport default Props;\n\n\n// message: { type: { name: \"string\" }, required: false, description: \"\" }","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Example from \"./Example\";\nimport Props from \"./Props\";\n\nconst ComponentPage = ({ component }) => {\n\tconst { name, description, props, examples } = component;\n\treturn (\n\t\t<div className=\"componentpage\">\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{description}</p>\n\t\t\t<h3>Example{examples.length === 0 ? \"\" : \"s\"}</h3>\n\t\t\t{examples.length > 0\n\t\t\t\t? examples.map(example => (\n\t\t\t\t\t\t<Example\n\t\t\t\t\t\t\tkey={example.code}\n\t\t\t\t\t\t\texample={example}\n\t\t\t\t\t\t\tcomponentName={name}\n\t\t\t\t\t\t/>\n\t\t\t\t  ))\n\t\t\t\t: \"no example\"}\n\t\t\t<h3>Props</h3>\n\t\t\t{props ? <Props props={props} /> : \"This components has no properties!\"}\n\t\t</div>\n\t);\n};\n\nComponentPage.propTypes = {\n\tcomponent: PropTypes.object.isRequired\n};\n\nexport default ComponentPage;\n","import React from \"react\";\nimport Navigation from \"./Navigation\";\nimport ComponentPage from \"./ComponentPage\";\nimport componentData from \"../../config/componentData\";\nimport \"./index.css\";\nexport default class Docs extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\troute: window.location.hash.substr(1)\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"hashchange\", () => {\n\t\t\tthis.setState({ route: window.location.hash.substr(1) });\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { route } = this.state;\n\t\tconst component = route\n\t\t\t? componentData.filter(component => component.name === route)[0]\n\t\t\t: componentData[0];\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1 style={{textAlign: \"center\"}}>Atomic Design system example!</h1>\n\t\t\t\t<div className=\"flex-container\">\n\t\t\t\t\t<Navigation\n\t\t\t\t\t\tcomponents={componentData.map(component => component.name)}\n\t\t\t\t\t/>\n\t\t\t\t\t<ComponentPage component={component} />\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport '../node_modules/highlight.js/styles/vs2015.css'\nimport Docs from './docs/Docs'\n\nrender(<Docs/>,document.getElementById('app'))"],"sourceRoot":""}